service: chain-dreamers-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 2048
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'staging'}
  region: ${opt:region, 'us-west-1'}
  environment:
    API_ASSETS_BUCKET_NAME: ${self:custom.s3.apiAssetsBucketName}
    API_CHAIN_DREAMERS_TABLE_NAME: ${self:custom.dynamodb.chainDreamersTableName}
    API_DOMAIN_NAME: ${self:custom.customDomain.domainName}
    API_DOMAIN_BASE_PATH: ${self:custom.customDomain.basePath}
    ETHERSCAN_API_KEY: ${env:ETHERSCAN_API_KEY}
    INFURA_ID: ${env:INFURA_ID}
    ALCHEMY_API_KEY: ${env:ALCHEMY_API_KEY}
    POCKET_APPLICATION_KEY: ${env:POCKET_APPLICATION_KEY}
    NETWORK: ${env:NETWORK}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:custom.s3.apiAssetsBucketName}/*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:*:*:table/${self:custom.dynamodb.chainDreamersTableName}"

functions:
  img:
    handler: handler.img
    events:
      - http:
          path: tokens/{id}/img
          method: get
          cors: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.id
  metadata:
    handler: handler.metadata
    events:
      - http:
          path: tokens/{id}/metadata
          method: get
          cors: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.id

  runnerToDreamer:
    handler: handler.runnerToDreamer
    events:
      - http:
          path: tokens/{id}/runnerToDreamer
          method: get
          cors: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.id

  candyImg:
    handler: handler.candyImg
    events:
      - http:
          path: candy/tokens/{id}/img
          method: get
          cors: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.id

  candyMetadata:
    handler: handler.candyMetadata
    events:
      - http:
          path: candy/tokens/{id}/metadata
          method: get
          cors: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.id

  mintedDreamers:
    handler: handler.mintedDreamers
    events:
      - http:
          path: minted-dreamers
          method: get
          cors: true

package:
  include:
    - eth-sdk/**
    - valise.json
    - meta.json

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-domain-manager
  - serverless-apigw-binary
  - serverless-api-gateway-caching

custom:
  includeDependencies:
    enableCaching: true
  s3:
    apiAssetsBucketName: chain-dreamers-api-assets-${self:provider.stage}
  dynamodb:
    chainDreamersTableName: ChainDreamersTable-${self:provider.stage}
  domainPath:
    test: 'test'
    staging: 'staging'
    prod: ''
  customDomain:
    domainName: api.chaindreamers.xyz
    basePath: ${self:custom.domainPath.${self:provider.stage}}
    stage: ${self:provider.stage}
    createRoute53Record: false
  caching:
    test: false
    staging: false
    prod: true
  apiGatewayCaching:
    enabled: ${self:custom.caching.${self:provider.stage}}
  apigwBinary:
    types:
      - 'image/png'
      - 'image/*'
      - '*/*'

resources:
  Resources:
    ApiAssetsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3.apiAssetsBucketName}
    ChainDreamersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.chainDreamersTableName}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

  Outputs:
    ApiAssetsBucketNameOutputKey:
      Value: !Ref ApiAssetsBucket
    ChainDreamersTableName:
      Value: !Ref ChainDreamersTable

