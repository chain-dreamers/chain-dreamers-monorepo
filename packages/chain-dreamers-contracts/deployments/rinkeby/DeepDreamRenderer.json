{
  "address": "0xB01818F874414420bB3A0d1d137D1c973036124C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x12a6ca24a776b973eda02915edafef0559aae551c8cbbe9259c7ba8c2b9fa0d4",
  "receipt": {
    "to": null,
    "from": "0x145247853C6eeA1263757d22C5e8C3A4dBbF48b6",
    "contractAddress": "0xB01818F874414420bB3A0d1d137D1c973036124C",
    "transactionIndex": 14,
    "gasUsed": "700557",
    "logsBloom": "0x
    "blockHash": "0xac5255e0453c979f2d939a78ca9df98d37e1e19b38112fb0e362f040577c9787",
    "transactionHash": "0x12a6ca24a776b973eda02915edafef0559aae551c8cbbe9259c7ba8c2b9fa0d4",
    "logs": [
      {
        "transactionIndex": 14,
        "blockNumber": 10120787,
        "transactionHash": "0x12a6ca24a776b973eda02915edafef0559aae551c8cbbe9259c7ba8c2b9fa0d4",
        "address": "0xB01818F874414420bB3A0d1d137D1c973036124C",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000145247853c6eea1263757d22c5e8c3a4dbbf48b6"
        ],
        "data": "0x",
        "logIndex": 21,
        "blockHash": "0xac5255e0453c979f2d939a78ca9df98d37e1e19b38112fb0e362f040577c9787"
      }
    ],
    "blockNumber": 10120787,
    "cumulativeGasUsed": "10082851",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "https://api.chaindreamers.xyz/staging/og/tokens/"
  ],
  "numDeployments": 1,
  "solcInputHash": "81db495604f40c250e86c4a9b1474539",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dreamers/DeepDreamRenderer.sol\":\"DeepDreamRenderer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf\",\"stackAllocation\":true}},\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"contracts/dreamers/DeepDreamRenderer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/IDreamersRenderer.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract DeepDreamRenderer is IDreamersRenderer, Ownable {\\n    string baseURI;\\n    using Strings for uint256;\\n\\n    constructor(string memory _baseURI) {\\n        baseURI = _baseURI;\\n    }\\n\\n    function setBaseURI(string memory _baseURI) external onlyOwner {\\n        baseURI = _baseURI;\\n    }\\n\\n    function tokenURI(uint256 tokenId, uint8)\\n        external\\n        view\\n        override\\n        returns (string memory)\\n    {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    bytes(baseURI),\\n                    tokenId.toString(),\\n                    \\\"/metadata\\\"\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x82e1c9135a4e4365c174e2407f89e04d3cb909c9d7302f02d225210f4adc152f\",\"license\":\"MIT\"},\"contracts/interfaces/IDreamersRenderer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IDreamersRenderer {\\n    function tokenURI(uint256 tokenId, uint8 candy)\\n        external\\n        view\\n        returns (string memory);\\n}\\n\",\"keccak256\":\"0x391be7de798d2fb8c8c6dcb46a565d5a02ac7c7c3d1f6c051e112de908ce57f2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000d0038038062000d0083398101604081905262000034916200028f565b6200003f336200005c565b805162000054906001906020840190620000ac565b505062000316565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000ba90620002e5565b90600052602060002090601f016020900481019282620000de576000855562000129565b82601f10620000f957805160ff191683800117855562000129565b8280016001018555821562000129579182015b82811115620001295782518255916020019190600101906200010c565b50620001379291506200013b565b5090565b5b808211156200013757600081556001016200013c565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681016001600160401b038111828210171562000190576200019062000152565b6040525050565b6000620001a360405190565b9050620001b1828262000168565b919050565b60006001600160401b03821115620001d257620001d262000152565b601f19601f83011660200192915050565b60005b8381101562000200578181015183820152602001620001e6565b8381111562000210576000848401525b50505050565b60006200022d6200022784620001b6565b62000197565b9050828152602081018484840111156200024a576200024a600080fd5b62000257848285620001e3565b509392505050565b600082601f830112620002755762000275600080fd5b81516200028784826020860162000216565b949350505050565b600060208284031215620002a657620002a6600080fd5b81516001600160401b03811115620002c157620002c1600080fd5b62000287848285016200025f565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620002fa57607f821691505b60208210811415620003105762000310620002cf565b50919050565b6109da80620003266000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100aa5780638da5cb5b146100b2578063f2fde38b146100d857600080fd5b806355f804b31461006c5780635cc518ba14610081575b600080fd5b61007f61007a366004610574565b6100eb565b005b61009461008f3660046105db565b610142565b6040516100a1919061067a565b60405180910390f35b61007f610178565b60005473ffffffffffffffffffffffffffffffffffffffff166040516100a191906106bf565b61007f6100e63660046106e1565b6101bb565b60005473ffffffffffffffffffffffffffffffffffffffff16331461012b5760405162461bcd60e51b815260040161012290610702565b60405180910390fd5b805161013e9060019060208401906103e0565b5050565b6060600161014f84610231565b60405160200161016092919061082d565b60405160208183030381529060405290505b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101af5760405162461bcd60e51b815260040161012290610702565b6101b9600061036b565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101f25760405162461bcd60e51b815260040161012290610702565b73ffffffffffffffffffffffffffffffffffffffff81166102255760405162461bcd60e51b815260040161012290610871565b61022e8161036b565b50565b60608161027157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561029b5780610285816108e8565b91506102949050600a83610937565b9150610275565b60008167ffffffffffffffff8111156102b6576102b6610479565b6040519080825280601f01601f1916602001820160405280156102e0576020820181803683370190505b5090505b8415610363576102f560018361094b565b9150610302600a86610962565b61030d906030610976565b60f81b8183815181106103225761032261098e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061035c600a86610937565b94506102e4565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546103ec90610752565b90600052602060002090601f01602090048101928261040e5760008555610454565b82601f1061042757805160ff1916838001178555610454565b82800160010185558215610454579182015b82811115610454578251825591602001919060010190610439565b50610460929150610464565b5090565b5b808211156104605760008155600101610465565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156104b5576104b5610479565b6040525050565b60006104c760405190565b90506104d3828261048f565b919050565b600067ffffffffffffffff8211156104f2576104f2610479565b601f19601f83011660200192915050565b82818337506000910152565b600061052261051d846104d8565b6104bc565b90508281526020810184848401111561053d5761053d600080fd5b610548848285610503565b509392505050565b600082601f83011261056457610564600080fd5b813561036384826020860161050f565b60006020828403121561058957610589600080fd5b813567ffffffffffffffff8111156105a3576105a3600080fd5b61036384828501610550565b805b811461022e57600080fd5b8035610172816105af565b60ff81166105b1565b8035610172816105c7565b600080604083850312156105f1576105f1600080fd5b60006105fd85856105bc565b925050602061060e858286016105d0565b9150509250929050565b60005b8381101561063357818101518382015260200161061b565b83811115610642576000848401525b50505050565b6000610652825190565b808452602084019350610669818560208601610618565b601f01601f19169290920192915050565b6020808252810161068b8184610648565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610172565b6106b981610692565b82525050565b6020810161017282846106b0565b6105b181610692565b8035610172816106cd565b6000602082840312156106f6576106f6600080fd5b600061036384846106d6565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604083015260608201610172565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061076657607f821691505b602082108114156107795761077961073c565b50919050565b6000815461078c81610752565b6001821680156107a357600181146107d257610802565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831686528186019350610802565b60008581526020902060005b838110156107fa578154888201526001909101906020016107de565b505081860193505b50505092915050565b6000610815825190565b610823818560208601610618565b9290920192915050565b610837818461077f565b9050610843818361080b565b7f2f6d657461646174610000000000000000000000000000000000000000000000815290506009810161068b565b6020808252810161017281602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561091a5761091a6108d2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261094657610946610921565b500490565b60008282101561095d5761095d6108d2565b500390565b60008261097157610971610921565b500690565b60008219821115610989576109896108d2565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201e5aa6ac074bd2cacd7a203ee25662366b36427bf996e324ff3f4396dcc8db9864736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100aa5780638da5cb5b146100b2578063f2fde38b146100d857600080fd5b806355f804b31461006c5780635cc518ba14610081575b600080fd5b61007f61007a366004610574565b6100eb565b005b61009461008f3660046105db565b610142565b6040516100a1919061067a565b60405180910390f35b61007f610178565b60005473ffffffffffffffffffffffffffffffffffffffff166040516100a191906106bf565b61007f6100e63660046106e1565b6101bb565b60005473ffffffffffffffffffffffffffffffffffffffff16331461012b5760405162461bcd60e51b815260040161012290610702565b60405180910390fd5b805161013e9060019060208401906103e0565b5050565b6060600161014f84610231565b60405160200161016092919061082d565b60405160208183030381529060405290505b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101af5760405162461bcd60e51b815260040161012290610702565b6101b9600061036b565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101f25760405162461bcd60e51b815260040161012290610702565b73ffffffffffffffffffffffffffffffffffffffff81166102255760405162461bcd60e51b815260040161012290610871565b61022e8161036b565b50565b60608161027157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561029b5780610285816108e8565b91506102949050600a83610937565b9150610275565b60008167ffffffffffffffff8111156102b6576102b6610479565b6040519080825280601f01601f1916602001820160405280156102e0576020820181803683370190505b5090505b8415610363576102f560018361094b565b9150610302600a86610962565b61030d906030610976565b60f81b8183815181106103225761032261098e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061035c600a86610937565b94506102e4565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546103ec90610752565b90600052602060002090601f01602090048101928261040e5760008555610454565b82601f1061042757805160ff1916838001178555610454565b82800160010185558215610454579182015b82811115610454578251825591602001919060010190610439565b50610460929150610464565b5090565b5b808211156104605760008155600101610465565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156104b5576104b5610479565b6040525050565b60006104c760405190565b90506104d3828261048f565b919050565b600067ffffffffffffffff8211156104f2576104f2610479565b601f19601f83011660200192915050565b82818337506000910152565b600061052261051d846104d8565b6104bc565b90508281526020810184848401111561053d5761053d600080fd5b610548848285610503565b509392505050565b600082601f83011261056457610564600080fd5b813561036384826020860161050f565b60006020828403121561058957610589600080fd5b813567ffffffffffffffff8111156105a3576105a3600080fd5b61036384828501610550565b805b811461022e57600080fd5b8035610172816105af565b60ff81166105b1565b8035610172816105c7565b600080604083850312156105f1576105f1600080fd5b60006105fd85856105bc565b925050602061060e858286016105d0565b9150509250929050565b60005b8381101561063357818101518382015260200161061b565b83811115610642576000848401525b50505050565b6000610652825190565b808452602084019350610669818560208601610618565b601f01601f19169290920192915050565b6020808252810161068b8184610648565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610172565b6106b981610692565b82525050565b6020810161017282846106b0565b6105b181610692565b8035610172816106cd565b6000602082840312156106f6576106f6600080fd5b600061036384846106d6565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604083015260608201610172565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061076657607f821691505b602082108114156107795761077961073c565b50919050565b6000815461078c81610752565b6001821680156107a357600181146107d257610802565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831686528186019350610802565b60008581526020902060005b838110156107fa578154888201526001909101906020016107de565b505081860193505b50505092915050565b6000610815825190565b610823818560208601610618565b9290920192915050565b610837818461077f565b9050610843818361080b565b7f2f6d657461646174610000000000000000000000000000000000000000000000815290506009810161068b565b6020808252810161017281602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561091a5761091a6108d2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261094657610946610921565b500490565b60008282101561095d5761095d6108d2565b500390565b60008261097157610971610921565b500690565b60008219821115610989576109896108d2565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201e5aa6ac074bd2cacd7a203ee25662366b36427bf996e324ff3f4396dcc8db9864736f6c63430008080033",
  "libraries": {
    "Integers": "0x03abFda4e7cec3484D518848B5e6aa10965F91DD"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 225,
        "contract": "contracts/dreamers/DeepDreamRenderer.sol:DeepDreamRenderer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6384,
        "contract": "contracts/dreamers/DeepDreamRenderer.sol:DeepDreamRenderer",
        "label": "baseURI",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}